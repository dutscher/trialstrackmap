// build/import/game/640/bikes.json5
// database/media/bikes.json
module.exports = function (shared) {
    // https://github.com/madebybowtie/FlagKit/tree/master/Assets/PNG

    const repoPath = `../trialstrackmap-gfx`;
    const iconsPath = `${repoPath}/countries`;
    const destPath = "build/";
    const spriteName = "sprite-countries.png";
    const jsonName = "sprite-countries.json";
    // start import
    const spritesmith = require("spritesmith");
    const tasks = [
        "import-12-countries-sprite",
        "import-12-countries-sprite-css",
    ];

    shared.grunt.task.run(tasks);

    shared.grunt.registerTask(tasks[0], function () {
        const done = this.async();
        let files = [];

        // do sprite
        files = [];
        shared.fs.readdirSync(iconsPath).forEach(file => {
            files.push(iconsPath + "/" + file);
        });

        //console.log(files);
        console.log("create sprite with ", files.length, "images");
        spritesmith
            .run({
                src: files,
                //engine: require("canvassmith")
            }, (err, result) => {
                // If there was an error, throw it
                if (err) {
                    throw err;
                }
                // Output the image
                // copy to other repo
                const pathToGfxRepo = `${repoPath}/icons/${spriteName}`;
                console.log("write sprite", destPath + spriteName);
                if (shared.fs.existsSync(pathToGfxRepo)) {
                    shared.fs.writeFileSync(pathToGfxRepo, result.image);
                    console.log(`copied also to ${pathToGfxRepo}`);
                }
                // for debug
                shared.fs.writeFileSync(destPath + spriteName, result.image);
                shared.fs.writeFileSync(destPath + jsonName,
                    JSON.stringify({
                        props: result.properties,
                        coords: result.coordinates
                    }, null, 2));
                done();
            });

    });

    shared.grunt.registerTask(tasks[1], () => {
        const data = require("../../" + destPath + jsonName);

        let css = `
            // this file is generated by grunt/import/12.countries.js
            i.country {
                background-size: ${data.props.width}px ${data.props.height}px;
            }
        `;

        for (const fileName in data.coords) {
            const tile = data.coords[fileName];
            const pathReplace = fileName
                .split("/")
                .slice(0, -1)
                .join("/") + "/";
            const iconName = fileName
                .replace(pathReplace, "")
                .split(".")
                .slice(0, -1)
                .join(".")
                .toLowerCase();

            css += `
            .country--${iconName} {
                background-position: -${tile.x !== 0 ? tile.x + "px" : 0} -${tile.y !== 0 ? tile.y + "px" : 0};
            }
            `;
        }

        console.log("write sprite css");
        shared.fs.writeFileSync(`css/sprites/countries.less`, css);
    });
};